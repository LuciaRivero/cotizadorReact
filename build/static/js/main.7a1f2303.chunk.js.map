{"version":3,"sources":["Componentes/Header.js","Componentes/Formulario.js","Helper.js","Componentes/Resultado.js","Componentes/Resumen.js","Componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cotizarSeguro","e","preventDefault","plan","planBasicoRef","current","checked","infoAuto","marca","marcaRef","value","year","yearRef","React","createRef","planCompletoRef","onSubmit","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","Resumen","mostrarResumen","_this$props$datos","datos","Componentes_Resultado","App","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","state","Componentes_Header","Componentes_Formulario","Componentes_Resumen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Componentes_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7a1f2303.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className=\"top\">\r\n            <h1>{props.titulo}</h1>\r\n        \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component {\r\n    // refs son para leer los valores de los campos de un formulario\r\n    //.bind(this)\r\n    constructor(props){\r\n        super(props);\r\n        this.marcaRef = React.createRef();\r\n        this.yearRef = React.createRef();\r\n        this.planBasicoRef = React.createRef();\r\n        this.planCompletoRef = React.createRef();\r\n    }\r\n    \r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n        //leer el plan \r\n        const plan = this.planBasicoRef.current.checked ? 'basico':'completo';\r\n        //obtener los datos\r\n       // console.log(this.marcaRef.current.value);\r\n        //crear el objeto\r\n\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan: plan\r\n        }\r\n\r\n        //console.log(infoAuto);\r\n        //enviarlo al componente principal\r\n        this.props.cotizarSeguro(infoAuto);\r\n\r\n        //reset el formulario (opcional)\r\n        //e.currentTarget.reset() //realiza el reset pero si luego no seleccionas una opcion toma la ultima y cotiza con la ultima ALTO BUUUG AMIGOOO!\r\n    }\r\n    render () {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef}>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" name=\"plan\" value=\"basico\" ref={this.planBasicoRef}/> Básico\r\n                    <input type=\"radio\" name=\"plan\" value=\"completo\" ref={this.planCompletoRef}/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario;\r\n","export function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React, {Component} from 'react';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n    render () {\r\n        const resultado = this.props.resultado;\r\n        const mensaje = (!resultado) ? 'Elige Marca, Año y Tipo de seguro' : 'El total es: $';\r\n        return(\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n                    <CSSTransition \r\n                        classNames=\"resultado\"\r\n                            key={resultado}\r\n                            timeout={{enter:500, exit:500}}>\r\n                            <span>{resultado}</span>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React, {Component} from 'react';\r\nimport {primeraMayuscula} from '../Helper';\r\nimport Resultado from './Resultado';\r\n\r\nclass Resumen extends Component {\r\n    mostrarResumen = () => {\r\n        const {marca,year,plan} = this.props.datos;\r\n        if(!marca || !year || !plan) return null;\r\n        return (\r\n            <div className=\"resumen\">\r\n                <h2>Resumen</h2>\r\n                <li>Marca: {primeraMayuscula(marca)}</li>\r\n                <li>Plan: {primeraMayuscula(plan)}</li>\r\n                <li>año del auto: {year}</li>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div>\r\n                {this.mostrarResumen()}\r\n                <Resultado\r\n                    resultado={this.props.resultado}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resumen;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../Helper.js';\n\n\n\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      resultado : '',\n      datos: {}\n    }\n  }\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    // agregar una base de 2000\n    let resultado = 2000;\n\n    //obtener la diferencia de años\n    const diferencia = obtenerDiferenciaAnio(year);\n    //console.log('la diferencia es ' + diferencia);\n\n    //por cada año restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3) * resultado) / 100;\n    //console.log(resultado);\n\n    // calcualr marca americano 15% asiatico 5% y europeo 30% de incremento al valor actual\n    resultado = calcularMarca(marca) * resultado;\n\n    //el plan del auto, el basico incrementa el valor 20% y completo 50%\n    let incrementoPlan = obtenerPlan(plan);\n\n    //dependiendo del plan incrementar\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n    //console.log(resultado);\n    \n    const datosAuto = {\n      marca: marca,\n      plan: plan,\n      year: year\n    }\n\n    //tengo el costo\n    this.setState({\n      resultado: resultado,\n      datos: datosAuto\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header\n          titulo = 'Cotizador de seguro de auto'/>\n        <div className=\"contenedor-formulario\">\n          <Formulario\n            cotizarSeguro={this.cotizarSeguro}/>\n          <Resumen\n            datos={this.state.datos}\n            resultado={this.state.resultado}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './Componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}